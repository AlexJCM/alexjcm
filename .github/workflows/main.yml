# GitHub Action for generating a contribution graph with a snake eating your contributions.
name: Generate animation

# Controls when the action will run. This action runs every Monday

on:
  schedule:
    # At 02:00 AM, only on Monday
    - cron: "0 2 * * 1"

  # This command allows us to run the Action automatically from the Actions tab.
  workflow_dispatch:

# The sequence of runs in this workflow:
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks repo under $GITHUB_WORKSHOP, so your job can access it
      - name: Checkout 
        uses: actions/checkout@v3

      # Generates the snake
       # generates a snake game from a github user (<github_user_name>) contributions graph, output a svg animation at <svg_out_path>
      - name: Generate github-contribution-grid-snake.svg
        uses: Platane/snk/svg-only@v2
        with:
          # github user name to read the contribution graph from (**required**)
          # using action context var `github.repository_owner` or specified user
          #github_user_name: alexjcm
          github_user_name: ${{ github.repository_owner }}
          # these next 2 lines generate the files on a branch called "output". This keeps the main branch from cluttering up.
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark

      # show the status of the build. Makes it easier for debugging (if there's any issues).
      #- run: git status

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          force: true
      
      # push the content of <build_dir> to a branch
      # the content will be available at https://raw.githubusercontent.com/<github_user>/<repository>/<target_branch>/<file> , or as github page
      # push github-contribution-grid-snake.svg to the output branch
      - name: Deploy to GitHub Pages
       # if: success()
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          # the output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
